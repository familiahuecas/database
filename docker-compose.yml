version: '3.1'
services:
  backend:
    container_name: backend
    restart: "no"
    image: backend
    ports:
      - "8080:8080"
    env_file:
      - ./backend.env
    links:
      - database
    depends_on:
      - database
    networks:
      - network
    volumes:
      - ./application.yml:/home/app/application.yml
      - ../log/backend:/log
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  database:
    container_name: database
    image: database
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: CalleFalsa123
    ports:
      - "3306:3306"
    volumes:
      - datavolume:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    networks:
      - network

  backoffice:
    container_name: backoffice
    image: backoffice
    ports:
      - "5001:80"
    links:
      - backend
    depends_on:
      - backend
    networks:
      - network
    logging:
      driver: json-file
    env_file:
      - ./backoffice.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  builder:
    container_name: builder
    image: builder
    ports:
      - "5002:80"
    links:
      - backend
    depends_on:
      - backend
    networks:
      - network
    logging:
      driver: none
    env_file:
      - ./builder.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  runner:
    container_name: runner
    image: runner
    ports:
      - "81:80"
    links:
      - backend
    depends_on:
      - backend
    networks:
      - network
    logging:
      driver: none
    env_file:
      - ./runner.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  proxy:
    container_name: proxy
    image: proxy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - network
    logging:
      driver: json-file
    volumes:
      - ../certs:/etc/nginx/certs/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

volumes:
  datavolume:
    external: true

networks:
  network:
    driver: bridge
